library(tidyverse)
install.packages("keras")
library(keras)
install.packages("tensorflow")
library(tensorflow)
library(reticulate)
install_tensorflow(extra_packages = "pillow")
library(jpeg)

setwd("C:/IE 332")
getwd()

model<-load_model_tf("./dandelion_model")
summary(model)

width <- 224
height<- 224
target_size <- c(width, height)
rgb <- 3 #color channels

# Check for unmodified grass
gu=list.files("./grass")
for (i in gu){
  test_image <- image_load(paste("./grass/",i,sep=""),
                           target_size = target_size)
  x <- image_to_array(test_image)
  x <- array_reshape(x, c(1, dim(x)))
  x <- x/255
  pred <- model %>% predict(x)
  if(pred[1,2]<0.50){
    print(i)
  }
}

# Check for unmodified dandelions
du=list.files("./dandelions")
for (i in du){
  test_image <- image_load(paste("./dandelions/",i,sep=""),
                           target_size = target_size)
  x <- image_to_array(test_image)
  x <- array_reshape(x, c(1, dim(x)))
  x <- x/255
  pred <- model %>% predict(x)
  if(pred[1,1]<0.50){
    print(i)
  }
}

# Define the PGD attack parameters
epsilon <- 0.01
alpha <- 0.01
num_iterations <- 10

# PGD attack algorithm
pgd_attack <- function(image, epsilon, alpha, num_iterations, target_class){
  # Convert the image to an array and reshape it
  x <- image_to_array(image)
  x_dims <- dim(image)[1:3]
  x <- array_reshape(x, c(1, x_dims[1], x_dims[2], x_dims[3]))
  x <- x/255
  # Set the target classification (1 for dandelions, 2 for grass)
  y_target <- array(0, dim = c(1, 2))
  y_target[1, target_class] <- 1
  # Perform the PGD attack
  x_adv <- x
  for(i in 1:num_iterations){
    with(tf$GradientTape(persistent=TRUE) %as% tape, {
      x_adv <- tf$Variable(x_adv)
      loss <- keras$backend$categorical_crossentropy(y_target, model(x_adv))
      gradients <- tape$gradient(loss, x_adv)
      signed_grad <- sign(gradients)
      x_adv <- x_adv + alpha * signed_grad
      x_adv <- tf$clip_by_value(x_adv, x - epsilon, x + epsilon)
      x_adv <- tf$clip_by_value(x_adv, 0, 1)
    })
  }
  # Return the adversarial/modified image
  list(image = x_adv)
}

# Apply the PGD attack to the unmodified grass images and save the modified images in folder new_grass
for(i in gu){
  test_image <- image_load(paste("./grass/", i, sep = ""), target_size = target_size)
  changed_grass <- pgd_attack(test_image, epsilon, alpha, num_iterations, 1)
  adv_image <- array_reshape(changed_grass$image, dim(test_image))
  adv_image <- image_array_save(adv_image, path = paste("./new_grass/", i, sep = ""), format = "jpeg", quality = 100)
}


# Apply the PGD attack to the unmodified dandelion images and save the modified images in folder new_dandelions
for(i in du){
  test_image <- image_load(paste("./dandelions/", i, sep = ""), target_size = target_size)
  changed_dandelions <- pgd_attack(test_image, epsilon, alpha, num_iterations, 2)
  adv_image <- array_reshape(changed_dandelions$image, dim(test_image))
  adv_image <- image_array_save(adv_image, path = paste("./new_dandelions/", i, sep = ""), format = "jpeg", quality = 100)
}


# Check for modified grass
gm=list.files("./new_grass")
for (i in gm){
  test_image <- image_load(paste("./new_grass/",i,sep=""),
                           target_size = target_size)
  x <- image_to_array(test_image)
  x <- array_reshape(x, c(1, dim(x)))
  x <- x/255
  pred <- model %>% predict(x)
  if(pred[1,2]<0.50){
    print(i)
  }
}

# Check for modified dandelions
dm=list.files("./new_dandelions")
for (i in dm){
  test_image <- image_load(paste("./new_dandelions/",i,sep=""),
                           target_size = target_size)
  x <- image_to_array(test_image)
  x <- array_reshape(x, c(1, dim(x)))
  x <- x/255
  pred <- model %>% predict(x)
  if(pred[1,1]<0.50){
    print(i)
  }
}

#Single image testing
test_image <- image_load(paste("./grass/",gu[1],sep=""),
                         target_size = target_size)
x <- image_to_array(test_image)
x <- array_reshape(x, c(1, dim(x)))
x <- x/255
pred <- model %>% predict(x)
print(pred)
