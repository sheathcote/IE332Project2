#install packages
library(tidyverse)
library(keras)
library(tensorflow)
library(reticulate)
library(jpeg)

#set working directory to wherever you saved the project files
setwd("C:/Users/rajes/Downloads")
getwd()

#code to load model
model <- load_model_tf("./dandelion_model")
summary(model)

# One Pixel Attack function
one_pixel_attack <- function(image, model, num_trials, target_label) {
  best_confidence <- 0
  best_image <- image
  
  for (trial in 1:num_trials) {
    # Create a copy of the original image
    modified_image <- image
    
    # Choose a random pixel and channel to perturb
    x_coord <- sample(1:224, 1)
    y_coord <- sample(1:224, 1)
    channel <- sample(1:3, 1)
    
    # Perturb the pixel by a random value between 0 and 1
    modified_image[x_coord, y_coord, channel] <- runif(1)
    
    # Predict using the perturbed image
    pred <- model %>% predict(array_reshape(modified_image, c(1, 224, 224, 3)))
    confidence <- pred[1, target_label + 1]
    
    # Update the best perturbed image if the confidence is higher
    if (confidence > best_confidence) {
      best_confidence <- confidence
      best_image <- modified_image
    }
  }
  
  return(best_image)
}

#testing
target_size <- c(224, 224)

# Grass images
f=list.files("./grass")
for (i in f){
  test_image <- image_load(paste("./grass/",i,sep=""),
                           target_size = target_size)
  x <- image_to_array(test_image)
  x <- x/255
  
  target_label <- 1 # Target label for dandelion
  perturbed_image <- one_pixel_attack(x, model, 1000, target_label)
  
  pred <- model %>% predict(array_reshape(perturbed_image, c(1, 224, 224, 3)))
  print(pred)
}

# Dandelion images
f=list.files("./dandelions")
for (i in f){
  test_image <- image_load(paste("./dandelions/",i,sep=""),
                           target_size = target_size)
  x <- image_to_array(test_image)
  x <- x/255
  
  target_label <- 0 # Target label for grass
  perturbed_image <- one_pixel_attack(x, model, 1000, target_label)
  
  pred <- model %>% predict(array_reshape(perturbed_image, c(1, 224, 224, 3)))
  print(pred)
}
